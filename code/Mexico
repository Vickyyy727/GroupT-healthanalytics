---
title: "Mexico"
output: html_document
date: "2025-01-28"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Load Packages

This code checks if packages are installed. It installs any missing packages, and then loads all needed packages. Include this at the beginning of any R code you write -- you just need to edit the list of packages at the top!

Note that \`c("x","y")' is just creating a vector with the elements x and y!

```{r, include=TRUE, results='hide'}
packages <- c("dplyr", "ggplot2", "broom", "tidyr","srvyr", "survey", "ipumsr",  "here", "car", "kableExtra", "modelsummary")
package.check <- lapply(
  packages,
  FUN = function(x) {
    if (!require(x, character.only = TRUE)) {
      install.packages(x, dependencies = TRUE)
      library(x, character.only = TRUE)
    }
  }
)
```
## Load Data

```{r, include=FALSE}
# Set working directory
setwd(here())
```

```{r, include=TRUE}
# Load data
ddi <- read_ipums_ddi("~/OneDrive - Imperial College London/IC/Health Analytics/ipumsi_00002.xml")
data <- read_ipums_micro(ddi)
```

## Select Data

```{r, include=TRUE}
# Select data
selected_vars <- c("HLTHCOV", "EDUCMX", "INCEARN", "URBAN", "SEX", "AGE")
df <- data %>% select(all_of(selected_vars))

# View data summary
summary(df)
```

## Clean Data

```{r, include=TRUE}
# Check the missing values in each column
colSums(is.na(df))

# Delete rows with missing values
df_clean <- na.omit(df)
```

## Recode HLTHCOV

```{r, include=TRUE}
# Recode HLTHCOV: 90 = No insurance (0), Others = Has insurance (1)
df <- df %>%
  mutate(HLTHCOV = case_when(
    HLTHCOV == 90 ~ 0,  # No coverage
    HLTHCOV %in% c(98, 99) ~ NA_real_,  # Remove unknown and NIU cases
    TRUE ~ 1  # Other categories mean insured
  ))

# Remove missing values (Unknown & NIU)
df <- df %>% drop_na(HLTHCOV)

# Check recoding results
table(df$HLTHCOV)
```
## Recode URBAN

```{r, include=TRUE}
df <- df %>%
  mutate(URBAN = case_when(
    URBAN == 1 ~ "Rural",   # 1 -> rural
    URBAN == 2 ~ "Urban",   # 2 -> urban
    TRUE ~ NA_character_    # other -> NA
  )) %>%
  drop_na(URBAN)  # Remove NA

# Conversion
df$URBAN <- factor(df$URBAN, levels = c("Rural", "Urban"))

# Check
table(df$URBAN)
```
## Recode EDUCMX
```{r, include=TRUE}
df <- df %>%
  mutate(EDUCMX = case_when(
    EDUCMX %in% c(10, 21, 22, 23, 29) ~ "No Education",
    EDUCMX %in% c(100, 101, 102, 103, 104, 105, 106, 109) ~ "Primary",
    EDUCMX %in% c(211, 212, 213, 214, 219, 223, 229, 300, 310, 311, 312, 313, 314, 315, 319) ~ "Secondary",
    EDUCMX >= 400 & EDUCMX < 800 ~ "Higher Education",
    EDUCMX %in% c(800, 999) ~ NA_character_  # Delete Unknown and NIU
  )) %>%
  drop_na(EDUCMX)  # Remove missing value

# Conversion
df$EDUCMX <- factor(df$EDUCMX, levels = c("No Education", "Primary", "Secondary", "Higher Education"))

# Check
table(df$EDUCMX)
```

## Description Stat

```{r, include=TRUE}
# Health insurance coverage distribution
library(scales)

ggplot(df, aes(x = factor(HLTHCOV))) +
  geom_bar(fill = "red") +
  geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), vjust = -0.5, size = 5) +  
  labs(title = "Health Insurance Coverage Distribution",
       x = "Health Insurance (0 = No, 1 = Yes)", y = "Count") +
  scale_y_continuous(labels = scales::comma, expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))

# Education level distribution
ggplot(df, aes(x = EDUCMX)) +
  geom_bar(fill = "green") +
  geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), vjust = -0.5, size = 5) +  
  labs(title = "Education Level Distribution",
       x = "Education Level", y = "Count") +
  scale_y_continuous(labels = scales::comma, expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
  
# Urban vs Rural distribution
ggplot(df, aes(x = URBAN)) +
  geom_bar(fill = "blue") +
   geom_text(stat = "count", aes(label = scales::comma(after_stat(count))), vjust = -0.5, size = 5) +  
  labs(title = "Urban vs. Rural Distribution",
       x = "Residence Type", y = "Count") +
  scale_y_continuous(labels = scales::comma, expand = expansion(mult = c(0, 0.1))) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold"))
```

## Logistic Regression（No Grouping, General）

```{r, include=TRUE}
model1 <- glm(HLTHCOV ~ EDUCMX, data = df, family = binomial)

summary(model1) 
```

## Logistic Regression（Contain control variable）

```{r, including income variable}
df <- df %>% mutate(log_INCEARN = log(INCEARN + 1)) 
model_with_income <- glm(HLTHCOV ~ EDUCMX + log_INCEARN + SEX + AGE + URBAN, 
                             data = df, family = binomial)

summary(model_with_income)
```

```{r, do not control income variable}
model_without_income <- glm(HLTHCOV ~ EDUCMX + SEX + AGE + URBAN, 
                            data = df, family = binomial)

summary(model_without_income)
```




